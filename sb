#!/bin/bash
# Statusbar generator.

# directory for runtime files
tmpdir=/tmp/sb$DISPLAY

# configuration file defining modules and their order
config=~/.sbrc

error() {
	echo "error: $1" >&2
}

showstatus() {
	case $output in
		xrootname) xsetroot -name "$statusline" ;;
		stdout) echo "$statusline"
	esac
}

runck() {
	interval=$1 # in seconds
	updfile=$2
	[ -f "$tmpdir/$updfile" ] && {
		rm "$tmpdir/$updfile"
		return
	}
	[ "$(((tick * 2) % interval))" = 0 ]
}

recompute() {
	${modules[0]}
	statusline=${!modules[0]}
	for module in "${modules[@]:1}"; do
		$module
		statusline+=" | ${!module}"
	done
	statusline+=' '
}

finish() {
	rm -rf "$tmpdir"
	exit
}

loadconfig() {
	source "$config" || {
		error "failed to load configuraiton from $config"
		return 1
	}
	[ "${#modules[@]}" -gt 0 ] || {
		error 'no modules configured'
		return 1
	}
}

setup() {
	[ "$DISPLAY" ] || {
		error 'DISPLAY variable is not set'
		return 1
	}
	loadconfig || return
	trap '' TERM INT HUP
	mkdir "$tmpdir" 2>/dev/null || {
		error "statusbar for the display $DISPLAY is already running"
		return 1
	}
	trap finish EXIT TERM INT HUP
}

sbloop() {
	setup || return
	while : ; do
		recompute
		showstatus || return
		tick=$(((tick + 1) % 1000))
		sleep 0.5
	done
}

update() {
	[ "$DISPLAY" ] || {
		error 'DISPLAY variable is not set'
		return 1
	}
	[ "$target" ] || {
		error 'null module name'
		return 1
	}
	touch "$tmpdir/$target" 2>/dev/null
}

# default option values
output=xrootname
action=start
target=

while getopts ":xsu:" opt; do
	case $opt in
		x) action=start output=xrootname ;;
		s) action=start output=stdout ;;
		u) action=update target=$OPTARG ;;
		*)
			echo "usage: ${0##*/} { [-xs] | -u MODULE }"
			exit 1
	esac
done

case $action in
	start) sbloop ;;
	update) update ;;
esac
